import { BiometricIDAvailableResult, KeystoreAccessApi } from "./keystore-access.common";
export declare class KeystoreAccess extends android.hardware.fingerprint.FingerprintManager.AuthenticationCallback implements KeystoreAccessApi {
    private keyguardManager;
    private fingerprintManager;
    private keystoreKeyAlias;
    private data;
    private keyStore;
    private cipher;
    private cryptoObject;
    private cipherInEncryptMode;
    private encryptionIv;
    private cancellationSignal;
    private promiseResolve;
    private promiseReject;
    constructor();
    available(): Promise<BiometricIDAvailableResult>;
    useCustomUI(): boolean;
    storeDataWithFingerprint(keystoreKeyAlias: string, data: string, biometricMessage: string): Promise<void>;
    retrieveDataWithFingerprint(keystoreKeyAlias: string, biometricPromptMessage: string): Promise<string>;
    fingerprintEncryptedDataExists(keystoreKeyAlias: string): boolean;
    deleteFingerprintEncryptedData(keystoreKeyAlias: string): void;
    cleanup(): void;
    private createKey(keystoreKeyAlias);
    private initCipher(mode, keystoreKeyAlias);
    private tryEncrypt(secret);
    private tryDecrypt();
    private startListening();
    private stopListening();
    onAuthenticationError(errorCode: number, errString: string): void;
    onAuthenticationHelp(helpCode: number, helpString: string): void;
    onAuthenticationSucceeded(result: android.hardware.fingerprint.FingerprintManager.AuthenticationResult): void;
    onAuthenticationFailed(): void;
}
